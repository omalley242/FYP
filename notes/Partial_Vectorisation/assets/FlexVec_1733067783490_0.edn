{:highlights [{:id #uuid "674c8d8d-2ed7-4bd1-afb2-5b9ba5b1a9bd",
               :page 1,
               :position {:bounding {:x1 64.88715362548828,
                                     :y1 305.3385314941406,
                                     :x2 356.44593811035156,
                                     :y2 357.5303649902344,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 195.5531768798828,
                                   :y1 305.3385314941406,
                                   :x2 354.3861083984375,
                                   :y2 319.2274169921875,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 64.88715362548828,
                                   :y1 318.0772399902344,
                                   :x2 354.4142837524414,
                                   :y2 331.96612548828125,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 330.90277099609375,
                                   :x2 356.44593811035156,
                                   :y2 344.7916564941406,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 64.96310424804688,
                                   :y1 343.6414794921875,
                                   :x2 117.06372833251953,
                                   :y2 357.5303649902344,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 1},
               :content {:text "strongly connected component(SCC) are deemed not vectorizable unless SCCs can be eliminated using techniques such as scalar expansion or privatization."},
               :properties {:color "red"}}
              {:id #uuid "674c8dc2-2a5b-4f17-94e6-041c48df794d",
               :page 1,
               :position {:bounding {:x1 65.26692199707031,
                                     :y1 542.3502197265625,
                                     :x2 355.3002471923828,
                                     :y2 594.5420532226562,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 168.7005157470703,
                                   :y1 542.3502197265625,
                                   :x2 354.3843688964844,
                                   :y2 556.2391357421875,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 555.1865844726562,
                                   :x2 355.3002471923828,
                                   :y2 569.0755004882812,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 567.9253540039062,
                                   :x2 354.3871612548828,
                                   :y2 581.814208984375,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 580.6531982421875,
                                   :x2 216.199951171875,
                                   :y2 594.5420532226562,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 1},
               :content {:text "We show that FlexVec vectorization technique produces a Geomean speedup of 9% for the 11 SPEC 2006 benchmarks studied, and a Geomean speedup of 11% for 7 real applications."},
               :properties {:color "red"}}
              {:id #uuid "674c8e1c-2052-4c4e-b1f1-629a97c353c0",
               :page 1,
               :position {:bounding {:x1 383.3116149902344,
                                     :y1 229.41622924804688,
                                     :x2 672.6222534179688,
                                     :y2 295.27992248535156,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 383.3116149902344,
                                   :y1 229.41622924804688,
                                   :x2 478.3970642089844,
                                   :y2 243.99954223632812,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 255.92446899414062,
                                   :x2 672.6222534179688,
                                   :y2 269.8133544921875,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 268.6631774902344,
                                   :x2 672.4198608398438,
                                   :y2 282.55206298828125,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 281.3910369873047,
                                   :x2 672.4385986328125,
                                   :y2 295.27992248535156,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 1},
               :content {:text "1. Introduction Modern processors are equipped with ﬁxed-length vector processing units, such as AVX for x86 CPUs [6], NEON for ARM based CPUs [9] and Altivec for IBM [20] to"},
               :properties {:color "red"}}
              {:id #uuid "674c8e2e-6cd9-41dd-9f7b-a56b905d7836",
               :page 2,
               :position {:bounding {:x1 63,
                                     :y1 175.861083984375,
                                     :x2 364,
                                     :y2 269.861083984375,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects (),
                          :page 2},
               :content {:text "[:span]", :image 1733070381759},
               :properties {:color "red"}}
              {:id #uuid "674c8f14-11ee-4de1-9c66-7c594e4305cb",
               :page 2,
               :position {:bounding {:x1 375.6944444179535,
                                     :y1 85.47216796875,
                                     :x2 677.6944444179535,
                                     :y2 391.47216796875,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects (),
                          :page 2},
               :content {:text "[:span]", :image 1733070612393},
               :properties {:color "red"}}
              {:id #uuid "674c8f4f-c9c6-4b4d-92e0-a152f6db0061",
               :page 2,
               :position {:bounding {:x1 389.60502791404724,
                                     :y1 607.758207321167,
                                     :x2 624.640367269516,
                                     :y2 659.3749675750732,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 389.60502791404724,
                                   :y1 607.758207321167,
                                   :x2 511.3594834804535,
                                   :y2 618.8693523406982,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 389.60502791404724,
                                   :y1 628.0598430633545,
                                   :x2 525.8213365077972,
                                   :y2 639.1709880828857,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 389.60502791404724,
                                   :y1 648.2638835906982,
                                   :x2 624.640367269516,
                                   :y2 659.3749675750732,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 2},
               :content {:text "• Early loop termination• Conditional scalar update• Runtime cross-iteration memory dependencie"},
               :properties {:color "red"}}
              {:id #uuid "674c9015-a586-4ceb-8fd9-0ff4101d16f8",
               :page 3,
               :position {:bounding {:x1 64.82204604148865,
                                     :y1 212.64105987548828,
                                     :x2 356.44880843162537,
                                     :y2 277.5716018676758,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 177.73434615135193,
                                   :y1 212.64105987548828,
                                   :x2 355.19954085350037,
                                   :y2 226.52994537353516,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 64.96310591697693,
                                   :y1 225.37976837158203,
                                   :x2 356.44880843162537,
                                   :y2 239.2686538696289,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692366600037,
                                   :y1 238.2052993774414,
                                   :x2 354.38066267967224,
                                   :y2 252.09418487548828,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 64.82204604148865,
                                   :y1 250.94400787353516,
                                   :x2 354.3818299770355,
                                   :y2 264.83289337158203,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692366600037,
                                   :y1 263.6827163696289,
                                   :x2 178.308580160141,
                                   :y2 277.5716018676758,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 3},
               :content {:text " Superword Level Parallelism (SLP) vectorization [23] proposed to transform available Instruction Level Parallelism (ILP) in loops to vector parallelism when loop-level parallelism is scarce due to cyclic control and data dependencies"},
               :properties {:color "red"}}
              {:id #uuid "674c9056-2d75-4ea0-b2a3-cf924183bf82",
               :page 3,
               :position {:bounding {:x1 64.8220443725586,
                                     :y1 599.6201934814453,
                                     :x2 356.44532775878906,
                                     :y2 651.8120574951172,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 64.8220443725586,
                                   :y1 599.6201934814453,
                                   :x2 354.3846664428711,
                                   :y2 613.5091094970703,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 612.3589324951172,
                                   :x2 354.5875549316406,
                                   :y2 626.2478179931641,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 625.1844329833984,
                                   :x2 356.44532775878906,
                                   :y2 639.0733184814453,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 637.9231414794922,
                                   :x2 242.50491333007812,
                                   :y2 651.8120574951172,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 3},
               :content {:text "Another approach to parallelize irregular loops is based on the inspector/executor paradigm [34] where the compiler generates inspector code that at runtime analyzes the crossiteration dependencies in the loop."},
               :properties {:color "red"}}
              {:id #uuid "674c90c4-a837-4e74-ac8c-3a51d39fef3a",
               :page 3,
               :position {:bounding {:x1 65.26692199707031,
                                     :y1 773.9148941040039,
                                     :x2 356.48052978515625,
                                     :y2 826.1067276000977,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 65.26692199707031,
                                   :y1 773.9148941040039,
                                   :x2 356.48052978515625,
                                   :y2 787.8038101196289,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 786.7403945922852,
                                   :x2 354.3876495361328,
                                   :y2 800.6293106079102,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 799.4791641235352,
                                   :x2 356.44630432128906,
                                   :y2 813.3680191040039,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 65.26692199707031,
                                   :y1 812.2178726196289,
                                   :x2 93.63314056396484,
                                   :y2 826.1067276000977,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 3},
               :content {:text "Efforts similar to [29] have been successful in parallelizing graph based algorithms when loops are rewritten using their framework’s internal abstraction layers and set iterators."},
               :properties {:color "red"}}
              {:id #uuid "674c90f8-3be8-4ca8-8837-af2a190d4ebb",
               :page 3,
               :position {:bounding {:x1 383.3116149902344,
                                     :y1 131.33679962158203,
                                     :x2 672.4386596679688,
                                     :y2 170.78992462158203,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 383.3116149902344,
                                   :y1 131.33679962158203,
                                   :x2 672.4386596679688,
                                   :y2 145.2256851196289,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 144.07550811767578,
                                   :x2 672.4324951171875,
                                   :y2 157.96440887451172,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 156.90103912353516,
                                   :x2 618.9805908203125,
                                   :y2 170.78992462158203,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 3},
               :content {:text "Reconﬁgurable architectures such as Dyser [16] expose a decoupled access/execute model for an accelerator that is integrated with an existing out-of-order core"},
               :properties {:color "red"}}
              {:id #uuid "674c919b-d7ef-48a2-9fcc-a939cb2c355c",
               :page 3,
               :position {:bounding {:x1 383.3116149902344,
                                     :y1 487.0984938144684,
                                     :x2 673.2045288085938,
                                     :y2 652.2894423007965,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects ({:x1 630.4905395507812,
                                   :y1 487.0984938144684,
                                   :x2 673.2045288085938,
                                   :y2 500.98737931251526,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 499.83723282814026,
                                   :x2 672.4273071289062,
                                   :y2 513.7261183261871,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 512.5650770664215,
                                   :x2 672.4265747070312,
                                   :y2 526.4539930820465,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 383.3116149902344,
                                   :y1 525.4014418125153,
                                   :x2 428.8156433105469,
                                   :y2 539.2903578281403,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 389.6050109863281,
                                   :y1 547.2330458164215,
                                   :x2 672.412109375,
                                   :y2 558.3441908359528,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 399.001708984375,
                                   :y1 558.8216078281403,
                                   :x2 652.435791015625,
                                   :y2 572.710462808609,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 389.6050109863281,
                                   :y1 580.6532118320465,
                                   :x2 672.6552734375,
                                   :y2 591.7642958164215,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 399.001708984375,
                                   :y1 592.1549208164215,
                                   :x2 664.70947265625,
                                   :y2 606.0438368320465,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 389.6050109863281,
                                   :y1 614.0841810703278,
                                   :x2 672.4651489257812,
                                   :y2 625.1952650547028,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 399.001708984375,
                                   :y1 625.5750868320465,
                                   :x2 672.4552612304688,
                                   :y2 639.4639418125153,
                                   :width 740,
                                   :height 957.6470588235294}
                                  {:x1 399.001708984375,
                                   :y1 638.4005873203278,
                                   :x2 543.084716796875,
                                   :y2 652.2894423007965,
                                   :width 740,
                                   :height 957.6470588235294}),
                          :page 3},
               :content {:text ". A traditional vectorizer would therefore try to handle any SCCs in the dependence graph using one or more of the following methods:• Idiom recognition [31] is used to identify SCCs that are recurrences supported by the vector instruction set;• Self anti-dependencies can be ignored since a vector instruction reads all sources before writing its results;• Anti-dependencies involving scalar variables can be eliminated using scalar expansion, if the scalar variable deﬁnition dominates its uses."},
               :properties {:color "red"}}
              {:id #uuid "674c9250-8bed-4e94-81e0-4529f558a67b",
               :page 4,
               :position {:bounding {:x1 429,
                                     :y1 83.805419921875,
                                     :x2 623,
                                     :y2 173.805419921875,
                                     :width 740,
                                     :height 957.6470588235294},
                          :rects (),
                          :page 4},
               :content {:text "[:span]", :image 1733071440152},
               :properties {:color "red"}}],
 :extra {:page 1}}
